{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/EventService.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/event": {
      "post": {
        "operationId": "EventServiceV1_CreateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventEventRequest"
            }
          }
        ],
        "tags": [
          "EventServiceV1"
        ]
      },
      "put": {
        "operationId": "EventServiceV1_UpdateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventEventRequest"
            }
          }
        ],
        "tags": [
          "EventServiceV1"
        ]
      }
    },
    "/api/v1/event/{id}": {
      "delete": {
        "operationId": "EventServiceV1_DeleteEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EventServiceV1"
        ]
      }
    },
    "/api/v1/events/{id}": {
      "get": {
        "operationId": "EventServiceV1_GetEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EventServiceV1"
        ]
      }
    },
    "/api/v1/events/{start_time}/{end_time}": {
      "get": {
        "operationId": "EventServiceV1_GetEventsForPeriod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "start_time",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_time",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EventServiceV1"
        ]
      }
    }
  },
  "definitions": {
    "eventEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "start_time": {
          "type": "string",
          "format": "date-time"
        },
        "end_time": {
          "type": "string",
          "format": "date-time"
        },
        "notify_time": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "user_id": {
          "type": "string",
          "format": "int64"
        },
        "created_time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "eventEventRequest": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/eventEvent"
        },
        "request_id": {
          "type": "string"
        }
      }
    },
    "eventEventResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/eventEvent"
        }
      }
    },
    "eventEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/eventEvent"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
